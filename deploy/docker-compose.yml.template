version: '3'

services:

  postgres:
    container_name: postgres
    image: postgres:alpine3.16
    restart: always
    command: postgres -c 'max_connections=2000'
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=${MYSQL_ROOT_PASSWORD:-example}
    volumes:
      - ./init-postgres:/docker-entrypoint-initdb.d
      - tp-postgres-data:/var/lib/postgresql/data

  keycloak:
    image: bitnami/keycloak:20.0.3-debian-11-r13
    restart: always
    environment:
      - BASE_URL=http://HOST_IP/
      - APP_NAME=XXXX应用系统
      - KEYCLOAK_DATABASE_HOST=postgres
      - KEYCLOAK_CREATE_ADMIN_USER=true
      - KEYCLOAK_ADMIN_USER=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
      - KEYCLOAK_DATABASE_NAME=keycloak
      - KEYCLOAK_DATABASE_USER=root
      - KEYCLOAK_DATABASE_PASSWORD=example
      - KEYCLOAK_PROXY=edge
      - KEYCLOAK_HTTP_RELATIVE_PATH=/auth
      - KEYCLOAK_PRODUCTION=true
      # 必须加 --hostname-strict-https=false，否则无法打开 admin 控制台
      # 参考文献 https://www.keycloak.org/server/hostname
      - KEYCLOAK_EXTRA_ARGS=--hostname-strict-https=false -Dkeycloak.import=/tmp/realm.json --spi-theme-static-max-age=-1 --spi-theme-cache-themes=false --spi-theme-cache-templates=false
    volumes:
      - ./init-keycloak/realm.json:/tmp/realm.json
      - ./init-keycloak/tp-theme:/opt/bitnami/keycloak/themes/tp-theme
    depends_on:
      - postgres

  zookeeper:
    image: 'bitnami/zookeeper:3.8.0-debian-11-r49'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    restart: always

  # 有关 Kafka Docker 中的配置的关键概念介绍及区分线索
  # 参考文献 https://stackoverflow.com/questions/42998859/kafka-server-configuration-listeners-vs-advertised-listeners
  kafka:
    image: 'bitnami/kafka:3.3.1-debian-11-r5'
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://kafka:9093
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    restart: always
    depends_on:
      - zookeeper

  minio:
    image: 'bitnami/minio:2022.10.8-debian-11-r0'
    ports:
      - '9000:9000'
      - '9001:9001'
    environment:
      - MINIO_SERVER_HOST=${MINIO_HOST:-localhost}
      - MINIO_ROOT_USER=${MINIO_ROOT_USER:-minio-root-user}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD:-minio-root-password}
      - MINIO_DEFAULT_BUCKETS=${MINIO_DEFAULT_BUCKET:-tp-bucket}
      - MINIO_NOTIFY_KAFKA_BROKERS_TP=kafka:9092
      - MINIO_NOTIFY_KAFKA_ENABLE_TP=on
      - MINIO_NOTIFY_KAFKA_TOPIC_TP=${MINIO_BUCKET_NOTIFICATION_TOPIC:-minio_bucket_notification}
    depends_on:
      - kafka
    restart: always
    volumes:
      - tp-minio-data:/data

  bizbatchservice:
    image: tpservice/bizbatchservice:20230419140817
    extra_hosts:
     - "kafka-broker:ETL_IP"
    environment:
      # 211 预发布环境忽略下需删除 etl 的 kafka 配置
      - "JAVA_OPTS=-Dspring.batch.jdbc.initialize-schema=never"
      - KAFKA_HOST=kafka
      - MYSQL_HOST=postgres
      - MINIO_HOST=HOST_IP
      - MINIO_PORT=9000
      - KEYCLOAK_HOST=keycloak
      - ZOOKEEPER_HOST=zookeeper
    restart: always
    depends_on:
      - postgres
      - minio
      - zookeeper

  bizservice:
    image: tpservice/bizservice:20230419212641
    environment:
      - "JAVA_OPTS=-Dapp.reset-with-demo-data=none"
      - KAFKA_HOST=kafka
      - MYSQL_HOST=postgres
      - MINIO_HOST=HOST_IP
      - MINIO_PORT=9000
      - KEYCLOAK_HOST=keycloak
      - ZOOKEEPER_HOST=zookeeper
    restart: always
    depends_on:
      - postgres
      - keycloak
      - minio
      - zookeeper

  tpweb:
    image: tpweb:20230420101606
    environment:
      - API_HOST=HOST_IP
      - KEYCLOAK_HOST=HOST_IP
      - APP_NAME=XXXX应用系统
      - COMPANY_NAME=公司名称
      - VERTEXT_DELETE=false
    volumes:
      - ./init-nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./init-nginx/default.conf:/etc/nginx/conf.d/default.conf
    command: [ nginx-debug, '-g', 'daemon off;' ]
    ports:
      - "80:80"
    restart: always

  pgadmin4:
    image: dpage/pgadmin4:6.20
    environment:
      - PGADMIN_DEFAULT_EMAIL: root@example.com
      - PGADMIN_DEFAULT_PASSWORD: example
    restart: always

volumes:
  tp-minio-data:
    external: true
  tp-postgres-data:
    external: true